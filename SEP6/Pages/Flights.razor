@page "/flights"

@using DataAccessLibrary
@using DataAccessLibrary.Models
@using ChartJs.Blazor.Charts
@using ChartJs.Blazor.ChartJS.PieChart
@using ChartJs.Blazor.ChartJS.Common.Properties
@using ChartJs.Blazor.Util

@inject IModel model

<h3>Flights</h3>

@if (flights is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <ChartJsPieChart @ref="_pieChartJs" Config="@_config" Width="600" Height="300" />
}

@code {
    private List<FlightModel> flights;
    private string[] months;
    private List<double> count;

    private PieConfig _config;
    private ChartJsPieChart _pieChartJs;

    protected override async Task OnInitializedAsync()
    {
        flights = await model.GetFlightsAsync();
        CalculateArrays();

        _config = new PieConfig
        {
            Options = new PieOptions
            {
                Title = new OptionsTitle
                {
                    Display = true,
                    Text = "Sample chart from Blazor"
                },
                Responsive = true,
                Animation = new ArcAnimation
                {
                    AnimateRotate = true,
                    AnimateScale = true
                }
            }
        };

        _config.Data.Labels.AddRange(months);

        var pieSet = new PieDataset
        {
            BackgroundColor = new[] {   ColorUtil.RandomColorString(), ColorUtil.RandomColorString(), 
                                        ColorUtil.RandomColorString(), ColorUtil.RandomColorString(), 
                                        ColorUtil.RandomColorString(), ColorUtil.RandomColorString(), 
                                        ColorUtil.RandomColorString(), ColorUtil.RandomColorString(), 
                                        ColorUtil.RandomColorString(), ColorUtil.RandomColorString(), 
                                        ColorUtil.RandomColorString(), ColorUtil.RandomColorString() },
            BorderWidth = 0,
            HoverBackgroundColor = ColorUtil.RandomColorString(),
            HoverBorderColor = ColorUtil.RandomColorString(),
            HoverBorderWidth = 1,
            BorderColor = "#ffffff",
        };

        pieSet.Data.AddRange(count);
        _config.Data.Datasets.Add(pieSet);
    }

    protected void CalculateArrays()
    {
        months = new[] { "January", "February", "March", "April", "May", "June", "July", "August"
        , "September", "October", "November", "December"};
        count = new List<double>();

        foreach (var flight in flights)
        {
            count.Add((double)flight.Count);
        }
    }
}
