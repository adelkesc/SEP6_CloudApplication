@page "/totalflights"

@using ChartJs.Blazor.ChartJS.BarChart
@using ChartJs.Blazor.ChartJS.Common.Axes
@using ChartJs.Blazor.ChartJS.Common.Axes.Ticks
@using ChartJs.Blazor.ChartJS.Common.Enums
@using ChartJs.Blazor.ChartJS.Common.Properties
@using ChartJs.Blazor.Charts
@using ChartJs.Blazor.Util

<h3>Total Flights per Month</h3>


<ChartJsBarChart @ref="_barChart" Config="@_barChartConfig" Width="600" Height="300" />
<p>A graph will be here soon!</p>

<button type="button">
    Flights from 3 Origins
</button>
<br>
<a href="totalflights/meanairtravel">Mean Airtravel</a>


@code {
    private BarConfig _barChartConfig;
    private ChartJsBarChart _barChart;
    private BarDataset<double> _barDataSet;

    private List<FlightModel> flights;
    private string[] months;

    protected override async Task OnInitializedAsync()
    {
        flights = await model.NoFlightsPerMonthAsync();
        // Note the constructor argument
        _barChartConfig = new BarConfig(ChartType.HorizontalBar)
        {
            Options = new BarOptions
            {
                Title = new OptionsTitle
                {
                    Display = true,
                    Text = "Simple Bar Chart"
                },
                Responsive = true,
                Scales = new BarScales
                {
                    XAxes = new List<CartesianAxis>
                    {
                        new LinearCartesianAxis
                        {
                            Ticks = new LinearCartesianTicks
                            {
                                AutoSkip = false,
                                Min = 0 // Otherwise the lowest value in the dataset won't be visible
                            }
                        }
                    }
                }
            }
        };
        // new
        months = model.MonthNames();
        _barChartConfig.Data.Labels.AddRange(months);

        //Note the constructor argument
        _barDataSet = new BarDataset<double>(horizontal: true)
        {
            Label = "My double dataset",
            BackgroundColor = new[] { ColorUtil.RandomColorString(), ColorUtil.RandomColorString(), ColorUtil.RandomColorString(), ColorUtil.RandomColorString() },
            BorderColor = ColorUtil.RandomColorString(),
            BorderWidth = 1
        };

        _barDataSet.AddRange(new double[] { 8, 5, 3, 7 });
        _barChartConfig.Data.Datasets.Add(_barDataSet);

        return Task.CompletedTask;
    }
    }
