@page "/totalFlights"
@using ChartJs.Blazor.ChartJS.BarChart
@using ChartJs.Blazor.ChartJS.Common.Axes
@using ChartJs.Blazor.ChartJS.Common.Axes.Ticks
@using ChartJs.Blazor.ChartJS.Common.Enums
@using ChartJs.Blazor.ChartJS.Common.Properties
@using ChartJs.Blazor.Charts
@using ChartJs.Blazor.Util
@using DataAccessLibrary
@using DataAccessLibrary.Models
@using ChartJs.Blazor.ChartJS.Common.Wrappers
@using ChartJs.Blazor.ChartJS.BarChart.Axes

@inject IModel model;
@if (data == null)
{
    <p>Loading...</p>
}
else
{
    <button type=" button" class="btn btn-primary" @onclick="Change">Change CHart</button>
    <ChartJsBarChart @ref="_barChart"
                     Config="@_barChartConfig"
                     Width="600"
                     Height="300" />
    <br>
    <br>
    <div class="btn-group d-flex justify-content-center" role="group">
        <button type="button" class="btn btn-secondary" @onclick="ShowTotalFlights">Total Flights per Month</button>
        <button type="button" class="btn btn-secondary" @onclick="ShowPercentage">Total Flighs Frequency Stacked In Percentage</button> 
        <button type="button" class="btn btn-secondary" @onclick="ShowStackedFlights">Total Flighs Frequency Stacked</button>
    </div>
    <br>
    <br>
}

@code {
    private BarConfig _barChartConfig;
    private ChartJsBarChart _barChart;
    private BarDataset<DoubleWrapper> _barDataSet;
    private List<FlightModel> data;
    private List<FlightModel> data1;
    private bool change = true;

    private BarDataset<DoubleWrapper> _barDataSetTotal;


    public void Change()
    {
        change = !change;
        _barChartConfig.Options.Scales.XAxes = new List<CartesianAxis>
        {
                new BarCategoryAxis
                {
                    BarThickness = BarThickness.Flex,
                    Stacked = change
                }
            };
    }

    public void ShowStackedFlights()
    {
        var barSet1 = new BarDataset<DoubleWrapper>
        {
            Label = "JFK",
            BackgroundColor = "#892514",
            BorderWidth = 1,
            HoverBackgroundColor = "#892514",
            HoverBorderColor = "#892514",
            HoverBorderWidth = 1,
            BorderColor = "#ffffff",
        };
        var barSet2 = new BarDataset<DoubleWrapper>
        {
            Label = "EWR",
            BackgroundColor = "#2cac19",
            BorderWidth = 1,
            HoverBackgroundColor = "#2cac19",
            HoverBorderColor = "#2cac19",
            HoverBorderWidth = 1,
            BorderColor = "#ffffff",
        };
        var barSet3 = new BarDataset<DoubleWrapper>
        {
            Label = "LGA",
            BackgroundColor = "#154591",
            BorderWidth = 1,
            HoverBackgroundColor = "#154591",
            HoverBorderColor = "#154591",
            HoverBorderWidth = 1,
            BorderColor = "#ffffff",
        };
        double[] countJFK = data[0].TotalFlights(data, "JFK");
        double[] countEWR = data[0].TotalFlights(data, "EWR");
        double[] countLGA = data[0].TotalFlights(data, "LGA");
        _barChartConfig.Data.Datasets.Clear();
        barSet1.AddRange(countJFK.Wrap());
        barSet2.AddRange(countEWR.Wrap());
        barSet3.AddRange(countLGA.Wrap());
        _barChartConfig.Data.Datasets.Add(barSet1);
        _barChartConfig.Data.Datasets.Add(barSet2);
        _barChartConfig.Data.Datasets.Add(barSet3);
    }

    public void ShowPercentage()
    {
        var barSet1 = new BarDataset<DoubleWrapper>
        {
            Label = "JFK",
            BackgroundColor = "#892514",
            BorderWidth = 1,
            HoverBackgroundColor = "#892514",
            HoverBorderColor = "#892514",
            HoverBorderWidth = 1,
            BorderColor = "#ffffff",
        };
        var barSet2 = new BarDataset<DoubleWrapper>
        {
            Label = "EWR",
            BackgroundColor = "#2cac19",
            BorderWidth = 1,
            HoverBackgroundColor = "#2cac19",
            HoverBorderColor = "#2cac19",
            HoverBorderWidth = 1,
            BorderColor = "#ffffff",
        };
        var barSet3 = new BarDataset<DoubleWrapper>
        {
            Label = "LGA",
            BackgroundColor = "#154591",
            BorderWidth = 1,
            HoverBackgroundColor = "#154591",
            HoverBorderColor = "#154591",
            HoverBorderWidth = 1,
            BorderColor = "#ffffff",
        };
        double[] countJFK = model.Percentage(data, "JFK");
        double[] countEWR = model.Percentage(data, "EWR");
        double[] countLGA = model.Percentage(data, "LGA");
        _barChartConfig.Data.Datasets.Clear();
        barSet1.AddRange(countJFK.Wrap());
        barSet2.AddRange(countEWR.Wrap());
        barSet3.AddRange(countLGA.Wrap());
        _barChartConfig.Data.Datasets.Add(barSet1);
        _barChartConfig.Data.Datasets.Add(barSet2);
        _barChartConfig.Data.Datasets.Add(barSet3);
    }

    public void ShowTotalFlights()
    {
        //Total Flights
        var datasetTotal = new BarDataset<DoubleWrapper>
        {
            Label = "All Flights",
            BackgroundColor = "#6682ea",
            BorderWidth = 0,
            HoverBackgroundColor = "#6682ea",
            HoverBorderColor = "#6682ea",
            HoverBorderWidth = 1,
            BorderColor = "#ffffff"
        };

        _barChartConfig.Data.Datasets.Clear();
        datasetTotal.AddRange(data[0].TotalFlights(data, "all").Wrap());

        _barChartConfig.Data.Datasets.Add(datasetTotal);
    }

    protected async override void OnInitialized()
    {
        data = await model.NoFlightsPerMonthPerOriginAsync();
        data1 = await model.TotalFlightsMonthAsync();

        _barChartConfig = new BarConfig
        {
            Options = new BarOptions
            {
                Title = new OptionsTitle
                {
                    Display = true,
                    Text = "Total Flights per Month"
                },
                Scales = new BarScales
                {
                    XAxes = new List<CartesianAxis>
                {
                        new BarCategoryAxis
                        {
                            BarThickness = BarThickness.Flex,
                            Stacked = true
                        }
                    },
                    YAxes = new List<CartesianAxis>
            {
                        new BarLinearCartesianAxis
                        {
                            Ticks = new LinearCartesianTicks
                            {
                                BeginAtZero = true
                            }
                        }
                    }
                }
            }
        };


        string[] months;
        months = new[] { "January", "February", "March", "April", "May", "June", "July", "August"
        , "September", "October", "November", "December"};
        _barChartConfig.Data.Labels.AddRange(months);


        if (data != null)
        {
            double[] countJFK = data[0].TotalFlights(data, "JFK");
            double[] countEWR = data[0].TotalFlights(data, "EWR");
            double[] countLGA = data[0].TotalFlights(data, "LGA");

            var barSet1 = new BarDataset<DoubleWrapper>
            {
                Label = "JFK",
                BackgroundColor = "#892514",
                BorderWidth = 1,
                HoverBackgroundColor = "#892514",
                HoverBorderColor = "#892514",
                HoverBorderWidth = 1,
                BorderColor = "#ffffff",
            };

            _barChartConfig.Data.Datasets.Add(barSet1);

            var barSet2 = new BarDataset<DoubleWrapper>
            {
                Label = "EWR",
                BackgroundColor = "#2cac19",
                BorderWidth = 1,
                HoverBackgroundColor = "#2cac19",
                HoverBorderColor = "#2cac19",
                HoverBorderWidth = 1,
                BorderColor = "#ffffff",
            };

            _barChartConfig.Data.Datasets.Add(barSet2);

            var barSet3 = new BarDataset<DoubleWrapper>
            {
                Label = "LGA",
                BackgroundColor = "#154591",
                BorderWidth = 1,
                HoverBackgroundColor = "#154591",
                HoverBorderColor = "#154591",
                HoverBorderWidth = 1,
                BorderColor = "#ffffff",
            };

            _barChartConfig.Data.Datasets.Add(barSet3);

            barSet1.AddRange(countJFK.Wrap());
            barSet2.AddRange(countEWR.Wrap());
            barSet3.AddRange(countLGA.Wrap());
        }
        this.StateHasChanged();
    }
}
