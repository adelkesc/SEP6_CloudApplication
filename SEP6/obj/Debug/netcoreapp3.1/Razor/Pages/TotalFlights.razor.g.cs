#pragma checksum "D:\Code\SEP6_CloudApplication\SEP6\Pages\TotalFlights.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "9ca27423b3d4accbd822f34cd32202b4fceab3bd"
// <auto-generated/>
#pragma warning disable 1591
namespace SEP6.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\Code\SEP6_CloudApplication\SEP6\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Code\SEP6_CloudApplication\SEP6\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Code\SEP6_CloudApplication\SEP6\_Imports.razor"
using SEP6;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Code\SEP6_CloudApplication\SEP6\_Imports.razor"
using SEP6.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\Code\SEP6_CloudApplication\SEP6\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\Code\SEP6_CloudApplication\SEP6\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\Code\SEP6_CloudApplication\SEP6\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\Code\SEP6_CloudApplication\SEP6\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "D:\Code\SEP6_CloudApplication\SEP6\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "D:\Code\SEP6_CloudApplication\SEP6\_Imports.razor"
using ChartJs.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Code\SEP6_CloudApplication\SEP6\Pages\TotalFlights.razor"
using ChartJs.Blazor.ChartJS.BarChart;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Code\SEP6_CloudApplication\SEP6\Pages\TotalFlights.razor"
using ChartJs.Blazor.ChartJS.Common.Axes;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Code\SEP6_CloudApplication\SEP6\Pages\TotalFlights.razor"
using ChartJs.Blazor.ChartJS.Common.Axes.Ticks;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Code\SEP6_CloudApplication\SEP6\Pages\TotalFlights.razor"
using ChartJs.Blazor.ChartJS.Common.Enums;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\Code\SEP6_CloudApplication\SEP6\Pages\TotalFlights.razor"
using ChartJs.Blazor.ChartJS.Common.Properties;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\Code\SEP6_CloudApplication\SEP6\Pages\TotalFlights.razor"
using ChartJs.Blazor.Charts;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\Code\SEP6_CloudApplication\SEP6\Pages\TotalFlights.razor"
using ChartJs.Blazor.Util;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\Code\SEP6_CloudApplication\SEP6\Pages\TotalFlights.razor"
using DataAccessLibrary;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\Code\SEP6_CloudApplication\SEP6\Pages\TotalFlights.razor"
using DataAccessLibrary.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "D:\Code\SEP6_CloudApplication\SEP6\Pages\TotalFlights.razor"
using ChartJs.Blazor.ChartJS.Common.Wrappers;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "D:\Code\SEP6_CloudApplication\SEP6\Pages\TotalFlights.razor"
using ChartJs.Blazor.ChartJS.BarChart.Axes;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/totalFlights")]
    public partial class TotalFlights : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
            __builder.AddMarkupContent(0, "<h3>Total Number of Flights</h3>\r\n<br>\r\n");
#nullable restore
#line 17 "D:\Code\SEP6_CloudApplication\SEP6\Pages\TotalFlights.razor"
 if (data == null)
{

#line default
#line hidden
#nullable disable
            __builder.AddContent(1, "    ");
            __builder.AddMarkupContent(2, "<p>Loading...</p>\r\n");
#nullable restore
#line 20 "D:\Code\SEP6_CloudApplication\SEP6\Pages\TotalFlights.razor"
}
else
{

#line default
#line hidden
#nullable disable
            __builder.AddContent(3, "    ");
            __builder.OpenElement(4, "div");
            __builder.AddAttribute(5, "class", "btn-group d-flex justify-content-center");
            __builder.AddAttribute(6, "role", "group");
            __builder.AddMarkupContent(7, "\r\n        ");
            __builder.OpenElement(8, "button");
            __builder.AddAttribute(9, "type", "button");
            __builder.AddAttribute(10, "class", "btn btn-secondary");
            __builder.AddAttribute(11, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 24 "D:\Code\SEP6_CloudApplication\SEP6\Pages\TotalFlights.razor"
                                                                  ShowFrequencyBar

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(12, "Frequency");
            __builder.CloseElement();
            __builder.AddMarkupContent(13, "\r\n        ");
            __builder.OpenElement(14, "button");
            __builder.AddAttribute(15, "type", "button");
            __builder.AddAttribute(16, "class", "btn btn-secondary");
            __builder.AddAttribute(17, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 25 "D:\Code\SEP6_CloudApplication\SEP6\Pages\TotalFlights.razor"
                                                                  ShowStackedFrequent

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(18, "Frequency Stacked");
            __builder.CloseElement();
            __builder.AddMarkupContent(19, "\r\n        ");
            __builder.OpenElement(20, "button");
            __builder.AddAttribute(21, "type", "button");
            __builder.AddAttribute(22, "class", "btn btn-secondary");
            __builder.AddAttribute(23, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 26 "D:\Code\SEP6_CloudApplication\SEP6\Pages\TotalFlights.razor"
                                                                  Percent

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(24, "Percent");
            __builder.CloseElement();
            __builder.AddMarkupContent(25, "\r\n        ");
            __builder.OpenElement(26, "button");
            __builder.AddAttribute(27, "type", "button");
            __builder.AddAttribute(28, "class", "btn btn-secondary");
            __builder.AddAttribute(29, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 27 "D:\Code\SEP6_CloudApplication\SEP6\Pages\TotalFlights.razor"
                                                                  ShowStackedPercent

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(30, "Percent Stacked");
            __builder.CloseElement();
            __builder.AddMarkupContent(31, "\r\n        ");
            __builder.OpenElement(32, "button");
            __builder.AddAttribute(33, "type", "button");
            __builder.AddAttribute(34, "class", "btn btn-secondary");
            __builder.AddAttribute(35, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 28 "D:\Code\SEP6_CloudApplication\SEP6\Pages\TotalFlights.razor"
                                                                  ShowTotalFlights

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(36, "Total Flights per Month");
            __builder.CloseElement();
            __builder.AddMarkupContent(37, "\r\n    ");
            __builder.CloseElement();
            __builder.AddMarkupContent(38, "\r\n    <br>\r\n    ");
            __builder.OpenComponent<ChartJs.Blazor.Charts.ChartJsBarChart>(39);
            __builder.AddAttribute(40, "Config", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<ChartJs.Blazor.ChartJS.BarChart.BarConfig>(
#nullable restore
#line 32 "D:\Code\SEP6_CloudApplication\SEP6\Pages\TotalFlights.razor"
                              _barChartConfig

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(41, "Width", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Int32?>(
#nullable restore
#line 33 "D:\Code\SEP6_CloudApplication\SEP6\Pages\TotalFlights.razor"
                            600

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(42, "Height", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Int32?>(
#nullable restore
#line 34 "D:\Code\SEP6_CloudApplication\SEP6\Pages\TotalFlights.razor"
                             300

#line default
#line hidden
#nullable disable
            ));
            __builder.AddComponentReferenceCapture(43, (__value) => {
#nullable restore
#line 31 "D:\Code\SEP6_CloudApplication\SEP6\Pages\TotalFlights.razor"
                           _barChart = (ChartJs.Blazor.Charts.ChartJsBarChart)__value;

#line default
#line hidden
#nullable disable
            }
            );
            __builder.CloseComponent();
            __builder.AddMarkupContent(44, "\r\n    <br>\r\n    <br>\r\n    ");
            __builder.AddMarkupContent(45, "<h3>Departure and Arrival Delays</h3>\r\n    ");
            __builder.OpenElement(46, "table");
            __builder.AddAttribute(47, "class", "table table-striped");
            __builder.AddMarkupContent(48, "\r\n        ");
            __builder.AddMarkupContent(49, @"<thead>
            <tr>
                <th class=""text-center"">Origin</th>
                <th class=""text-center"">Average Arrival Delay</th>
                <th class=""text-center"">Average Departure Delay</th>
            </tr>
        </thead>
        ");
            __builder.OpenElement(50, "tbody");
            __builder.AddMarkupContent(51, "\r\n");
#nullable restore
#line 47 "D:\Code\SEP6_CloudApplication\SEP6\Pages\TotalFlights.razor"
             foreach (var flight in data2)
            {

#line default
#line hidden
#nullable disable
            __builder.AddContent(52, "                ");
            __builder.OpenElement(53, "tr");
            __builder.AddMarkupContent(54, "\r\n                    ");
            __builder.OpenElement(55, "td");
            __builder.AddAttribute(56, "class", "text-center");
            __builder.AddContent(57, 
#nullable restore
#line 50 "D:\Code\SEP6_CloudApplication\SEP6\Pages\TotalFlights.razor"
                                             flight.Origin

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(58, "\r\n                    ");
            __builder.OpenElement(59, "td");
            __builder.AddAttribute(60, "class", "text-center");
            __builder.AddContent(61, 
#nullable restore
#line 51 "D:\Code\SEP6_CloudApplication\SEP6\Pages\TotalFlights.razor"
                                             Math.Round(flight.Avg_arr, 2)

#line default
#line hidden
#nullable disable
            );
            __builder.AddContent(62, " Minutes");
            __builder.CloseElement();
            __builder.AddMarkupContent(63, "\r\n                    ");
            __builder.OpenElement(64, "td");
            __builder.AddAttribute(65, "class", "text-center");
            __builder.AddContent(66, 
#nullable restore
#line 52 "D:\Code\SEP6_CloudApplication\SEP6\Pages\TotalFlights.razor"
                                             Math.Round(flight.Avg_dep, 2)

#line default
#line hidden
#nullable disable
            );
            __builder.AddContent(67, " Minutes");
            __builder.CloseElement();
            __builder.AddMarkupContent(68, "\r\n                ");
            __builder.CloseElement();
            __builder.AddMarkupContent(69, "\r\n");
#nullable restore
#line 54 "D:\Code\SEP6_CloudApplication\SEP6\Pages\TotalFlights.razor"
            }

#line default
#line hidden
#nullable disable
            __builder.AddContent(70, "        ");
            __builder.CloseElement();
            __builder.AddMarkupContent(71, "\r\n    ");
            __builder.CloseElement();
            __builder.AddMarkupContent(72, "\r\n    <br>\r\n    <br>\r\n");
#nullable restore
#line 59 "D:\Code\SEP6_CloudApplication\SEP6\Pages\TotalFlights.razor"
}

#line default
#line hidden
#nullable disable
        }
        #pragma warning restore 1998
#nullable restore
#line 61 "D:\Code\SEP6_CloudApplication\SEP6\Pages\TotalFlights.razor"
       
    private BarConfig _barChartConfig;
    private ChartJsBarChart _barChart;
    private BarDataset<DoubleWrapper> _barDataSet;
    private List<FlightModel> data;
    private List<FlightModel> data1;
    private List<FlightModel> data2;
    private bool change = true;
    private bool change1 = true;
    string[] months;

    private BarDataset<DoubleWrapper> _barDataSetTotal;

    public void ShowFrequencyBar()
    {
        var barSet1 = new BarDataset<DoubleWrapper>
        {
            Label = "JFK",
            BackgroundColor = "#892514",
            BorderWidth = 1,
            HoverBackgroundColor = "#892514",
            HoverBorderColor = "#892514",
            HoverBorderWidth = 1,
            BorderColor = "#ffffff",
        };

        var barSet2 = new BarDataset<DoubleWrapper>
        {
            Label = "EWR",
            BackgroundColor = "#2cac19",
            BorderWidth = 1,
            HoverBackgroundColor = "#2cac19",
            HoverBorderColor = "#2cac19",
            HoverBorderWidth = 1,
            BorderColor = "#ffffff",
        };

        var barSet3 = new BarDataset<DoubleWrapper>
        {
            Label = "LGA",
            BackgroundColor = "#154591",
            BorderWidth = 1,
            HoverBackgroundColor = "#154591",
            HoverBorderColor = "#154591",
            HoverBorderWidth = 1,
            BorderColor = "#ffffff",
        };

        _barChartConfig.Options.Title.Text = "Total Flighs Frequency In Numbers";
        double[] countJFK = data[0].TotalFlights(data, "JFK");
        double[] countEWR = data[0].TotalFlights(data, "EWR");
        double[] countLGA = data[0].TotalFlights(data, "LGA");
        _barChartConfig.Data.Datasets.Clear();
        barSet1.AddRange(countJFK.Wrap());
        barSet2.AddRange(countEWR.Wrap());
        barSet3.AddRange(countLGA.Wrap());
        _barChartConfig.Data.Datasets.Add(barSet1);
        _barChartConfig.Data.Datasets.Add(barSet2);
        _barChartConfig.Data.Datasets.Add(barSet3);
        _barChartConfig.Options.Scales.XAxes = new List<CartesianAxis>
        {
                new BarCategoryAxis
                {
                    BarThickness = BarThickness.Flex,
                    Stacked = false
                }
        };
    }

    //Total number of flights from 3 Origins (Frequency Stacked)
    public void ShowStackedFrequent()
    {
        var barSet1 = new BarDataset<DoubleWrapper>
        {
            Label = "JFK",
            BackgroundColor = "#892514",
            BorderWidth = 1,
            HoverBackgroundColor = "#892514",
            HoverBorderColor = "#892514",
            HoverBorderWidth = 1,
            BorderColor = "#ffffff",
        };
        var barSet2 = new BarDataset<DoubleWrapper>
        {
            Label = "EWR",
            BackgroundColor = "#2cac19",
            BorderWidth = 1,
            HoverBackgroundColor = "#2cac19",
            HoverBorderColor = "#2cac19",
            HoverBorderWidth = 1,
            BorderColor = "#ffffff",
        };
        var barSet3 = new BarDataset<DoubleWrapper>
        {
            Label = "LGA",
            BackgroundColor = "#154591",
            BorderWidth = 1,
            HoverBackgroundColor = "#154591",
            HoverBorderColor = "#154591",
            HoverBorderWidth = 1,
            BorderColor = "#ffffff",
        };
        _barChartConfig.Options.Title.Text = "Total Flighs Frequency Stacked In Numbers";
        double[] countJFK = data[0].TotalFlights(data, "JFK");
        double[] countEWR = data[0].TotalFlights(data, "EWR");
        double[] countLGA = data[0].TotalFlights(data, "LGA");
        _barChartConfig.Data.Datasets.Clear();
        barSet1.AddRange(countJFK.Wrap());
        barSet2.AddRange(countEWR.Wrap());
        barSet3.AddRange(countLGA.Wrap());
        _barChartConfig.Data.Datasets.Add(barSet1);
        _barChartConfig.Data.Datasets.Add(barSet2);
        _barChartConfig.Data.Datasets.Add(barSet3);
        _barChartConfig.Options.Scales.XAxes = new List<CartesianAxis>
        {
                new BarCategoryAxis
                {
                    BarThickness = BarThickness.Flex,
                    Stacked = true
                }
        };

    }

    //Total number of flights from 3 Origins (Percentage Stacked)
    public void ShowStackedPercent()
    {
        var barSet1 = new BarDataset<DoubleWrapper>
        {
            Label = "JFK",
            BackgroundColor = "#892514",
            BorderWidth = 1,
            HoverBackgroundColor = "#892514",
            HoverBorderColor = "#892514",
            HoverBorderWidth = 1,
            BorderColor = "#ffffff",
        };
        var barSet2 = new BarDataset<DoubleWrapper>
        {
            Label = "EWR",
            BackgroundColor = "#2cac19",
            BorderWidth = 1,
            HoverBackgroundColor = "#2cac19",
            HoverBorderColor = "#2cac19",
            HoverBorderWidth = 1,
            BorderColor = "#ffffff",
        };
        var barSet3 = new BarDataset<DoubleWrapper>
        {
            Label = "LGA",
            BackgroundColor = "#154591",
            BorderWidth = 1,
            HoverBackgroundColor = "#154591",
            HoverBorderColor = "#154591",
            HoverBorderWidth = 1,
            BorderColor = "#ffffff",
        };
        _barChartConfig.Options.Title.Text = "Total Flighs Frequency Stacked In Percentages";
        double[] countJFK = model.Percentage(data, "JFK");
        double[] countEWR = model.Percentage(data, "EWR");
        double[] countLGA = model.Percentage(data, "LGA");
        _barChartConfig.Data.Datasets.Clear();
        barSet1.AddRange(countJFK.Wrap());
        barSet2.AddRange(countEWR.Wrap());
        barSet3.AddRange(countLGA.Wrap());
        _barChartConfig.Data.Datasets.Add(barSet1);
        _barChartConfig.Data.Datasets.Add(barSet2);
        _barChartConfig.Data.Datasets.Add(barSet3);
        _barChartConfig.Options.Scales.XAxes = new List<CartesianAxis>
    {
                new BarCategoryAxis
                {
                    BarThickness = BarThickness.Flex,
                    Stacked = true
                }
        };
    }

    // Show unstacked percent

    public void Percent()
    {
        var barSet1 = new BarDataset<DoubleWrapper>
        {
            Label = "JFK",
            BackgroundColor = "#892514",
            BorderWidth = 1,
            HoverBackgroundColor = "#892514",
            HoverBorderColor = "#892514",
            HoverBorderWidth = 1,
            BorderColor = "#ffffff",
        };
        var barSet2 = new BarDataset<DoubleWrapper>
        {
            Label = "EWR",
            BackgroundColor = "#2cac19",
            BorderWidth = 1,
            HoverBackgroundColor = "#2cac19",
            HoverBorderColor = "#2cac19",
            HoverBorderWidth = 1,
            BorderColor = "#ffffff",
        };
        var barSet3 = new BarDataset<DoubleWrapper>
        {
            Label = "LGA",
            BackgroundColor = "#154591",
            BorderWidth = 1,
            HoverBackgroundColor = "#154591",
            HoverBorderColor = "#154591",
            HoverBorderWidth = 1,
            BorderColor = "#ffffff",
        };
        _barChartConfig.Options.Title.Text = "Total Flighs Frequency Stacked In Percentages";
        double[] countJFK = model.Percentage(data, "JFK");
        double[] countEWR = model.Percentage(data, "EWR");
        double[] countLGA = model.Percentage(data, "LGA");
        _barChartConfig.Data.Datasets.Clear();
        barSet1.AddRange(countJFK.Wrap());
        barSet2.AddRange(countEWR.Wrap());
        barSet3.AddRange(countLGA.Wrap());
        _barChartConfig.Data.Datasets.Add(barSet1);
        _barChartConfig.Data.Datasets.Add(barSet2);
        _barChartConfig.Data.Datasets.Add(barSet3);
        _barChartConfig.Options.Scales.XAxes = new List<CartesianAxis>
        {
                new BarCategoryAxis
                {
                    BarThickness = BarThickness.Flex,
                    Stacked = false
                }
        };
    }

    //Total number of flights per month
    public void ShowTotalFlights()
    {
        var datasetTotal = new BarDataset<DoubleWrapper>
        {
            Label = "All Flights",
            BackgroundColor = "#6682ea",
            BorderWidth = 0,
            HoverBackgroundColor = "#6682ea",
            HoverBorderColor = "#6682ea",
            HoverBorderWidth = 1,
            BorderColor = "#ffffff"
        };

        _barChartConfig.Data.Datasets.Clear();
        datasetTotal.AddRange(data[0].TotalFlights(data, "all").Wrap());

        _barChartConfig.Data.Datasets.Add(datasetTotal);

        _barChartConfig.Options.Scales.XAxes = new List<CartesianAxis>
    {
                new BarCategoryAxis
                {
                    BarThickness = BarThickness.Flex,
                    Stacked = false
                }
        };
    }

    protected async override void OnInitialized()
    {
        data = await model.NoFlightsPerMonthPerOriginAsync();
        data1 = await model.TotalFlightsMonthAsync();
        data2 = await model.MeanDelayPerOriginAsync();

        _barChartConfig = new BarConfig
        {
            Options = new BarOptions
            {
                Title = new OptionsTitle
                {
                    Display = true,
                    Text = "Total Flighs Frequency In Numbers"
                },
                Scales = new BarScales
                {
                    XAxes = new List<CartesianAxis>
{
                        new BarCategoryAxis
                        {
                            BarThickness = BarThickness.Flex,
                            Stacked = false
                        }
                    },
                    YAxes = new List<CartesianAxis>
{
                        new BarLinearCartesianAxis
                        {
                            Ticks = new LinearCartesianTicks
                            {
                                BeginAtZero = true
                            }
                        }
                    }
                }
            }
        };



        months = model.MonthNames();
        _barChartConfig.Data.Labels.AddRange(months);


        if (data != null)
        {
            double[] countJFK = data[0].TotalFlights(data, "JFK");
            double[] countEWR = data[0].TotalFlights(data, "EWR");
            double[] countLGA = data[0].TotalFlights(data, "LGA");

            var barSet1 = new BarDataset<DoubleWrapper>
            {
                Label = "JFK",
                BackgroundColor = "#892514",
                BorderWidth = 1,
                HoverBackgroundColor = "#892514",
                HoverBorderColor = "#892514",
                HoverBorderWidth = 1,
                BorderColor = "#ffffff",
            };

            _barChartConfig.Data.Datasets.Add(barSet1);

            var barSet2 = new BarDataset<DoubleWrapper>
            {
                Label = "EWR",
                BackgroundColor = "#2cac19",
                BorderWidth = 1,
                HoverBackgroundColor = "#2cac19",
                HoverBorderColor = "#2cac19",
                HoverBorderWidth = 1,
                BorderColor = "#ffffff",
            };

            _barChartConfig.Data.Datasets.Add(barSet2);

            var barSet3 = new BarDataset<DoubleWrapper>
            {
                Label = "LGA",
                BackgroundColor = "#154591",
                BorderWidth = 1,
                HoverBackgroundColor = "#154591",
                HoverBorderColor = "#154591",
                HoverBorderWidth = 1,
                BorderColor = "#ffffff",
            };

            _barChartConfig.Data.Datasets.Add(barSet3);

            barSet1.AddRange(countJFK.Wrap());
            barSet2.AddRange(countEWR.Wrap());
            barSet3.AddRange(countLGA.Wrap());
        }
        this.StateHasChanged();
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IModel model { get; set; }
    }
}
#pragma warning restore 1591
